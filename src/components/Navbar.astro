    ---
    const sections: Array<{ name: string; href: string; isAnchor?: boolean; external?: boolean }> = [
      { name: "Inicio", href: "/" },
      { name: "Blog", href: "/blog" },
    ];
    import { SITE_TITLE } from '@/consts';
    import { url } from '@/utils/url';
    const pathname = Astro.url.pathname;
    ---

    <nav class="navbar navbar-expand-lg mb-5 fixed-top">
    <div class="container-fluid">
        <a class="navbar-brand" href={url('/')}> 
        <img src={url('/assets/images/logo.svg')} alt={SITE_TITLE} class="navbar-logo" />
        </a>
        
        <button
            class="navbar-toggler"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent"
            aria-expanded="false"
            aria-label="Toggle navigation"
        >
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            {sections.map((section) => (
                <li class="nav-item">
                <a
                    class={`nav-link text-black ${(
                      section.href === '/' ? pathname === '/' : pathname.startsWith(section.href)
                    ) ? 'active' : ''}`}
                    href={url(section.href)}
                    aria-current={(section.href === '/' ? pathname === '/' : pathname.startsWith(section.href)) ? 'page' : undefined}
                >
                    {section.name}
                </a>
                </li>
            ))}
            </ul>
        </div>
        
    </div>
    </nav>
    <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const toggler = document.querySelector('.navbar-toggler');
      const collapse = document.querySelector('#navbarSupportedContent');
      if (!toggler || !collapse) return;
      toggler.addEventListener('click', () => {
        const isShown = collapse.classList.toggle('show');
        toggler.setAttribute('aria-expanded', String(isShown));
      });
    });
    </script>
    <style is:inline>
    .navbar{
        background: rgba(255, 255, 255, 0.5);
        backdrop-filter: saturate(180%) blur(33px);
        
        transition: all 0.5s ease;
        @media (width > 768px) {
        padding-inline: 4.5rem;
        }
        /* filter: invert(100%); */
        & .nav-link{
        /* opacity: 0; */
        transition: all 0.5s ease;
        }
    }
    .navbar-brand img {
        max-height: 60px; 
        transition: max-height 0.5s ease;
        /* filter:brightness(0) */
    }
    .navbar-scrolled .navbar-brand img {
        max-height: 60px; 
    }
    .navbar-scrolled  {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: saturate(180%) blur(5px);
        transition: all 0.5s ease;
        box-shadow: rgba(0,0,0,.33) 0 0 20px;
        /* filter: invert(0); */
        & .nav-link{
        opacity: 1;
        transition: all 0.5s ease;
        }
        /* & .navbar-brand img {
        filter:brightness(0) saturate(100%))
        } */
    }

    </style>



